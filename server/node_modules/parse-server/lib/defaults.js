"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DefaultMongoURI = exports.default = void 0;

var _parsers = require("./Options/parsers");

const {
  ParseServerOptions
} = require('./Options/Definitions');

const logsFolder = (() => {
  let folder = './logs/';

  if (typeof process !== 'undefined' && process.env.TESTING === '1') {
    folder = './test_logs/';
  }

  if (process.env.PARSE_SERVER_LOGS_FOLDER) {
    folder = (0, _parsers.nullParser)(process.env.PARSE_SERVER_LOGS_FOLDER);
  }

  return folder;
})();

const {
  verbose,
  level
} = (() => {
  const verbose = process.env.VERBOSE ? true : false;
  return {
    verbose,
    level: verbose ? 'verbose' : undefined
  };
})();

const DefinitionDefaults = Object.keys(ParseServerOptions).reduce((memo, key) => {
  const def = ParseServerOptions[key];

  if (def.hasOwnProperty('default')) {
    memo[key] = def.default;
  }

  return memo;
}, {});
const computedDefaults = {
  jsonLogs: process.env.JSON_LOGS || false,
  logsFolder,
  verbose,
  level
};

var _default = Object.assign({}, DefinitionDefaults, computedDefaults);

exports.default = _default;
const DefaultMongoURI = DefinitionDefaults.databaseURI;
exports.DefaultMongoURI = DefaultMongoURI;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9kZWZhdWx0cy5qcyJdLCJuYW1lcyI6WyJQYXJzZVNlcnZlck9wdGlvbnMiLCJyZXF1aXJlIiwibG9nc0ZvbGRlciIsImZvbGRlciIsInByb2Nlc3MiLCJlbnYiLCJURVNUSU5HIiwiUEFSU0VfU0VSVkVSX0xPR1NfRk9MREVSIiwidmVyYm9zZSIsImxldmVsIiwiVkVSQk9TRSIsInVuZGVmaW5lZCIsIkRlZmluaXRpb25EZWZhdWx0cyIsIk9iamVjdCIsImtleXMiLCJyZWR1Y2UiLCJtZW1vIiwia2V5IiwiZGVmIiwiaGFzT3duUHJvcGVydHkiLCJkZWZhdWx0IiwiY29tcHV0ZWREZWZhdWx0cyIsImpzb25Mb2dzIiwiSlNPTl9MT0dTIiwiYXNzaWduIiwiRGVmYXVsdE1vbmdvVVJJIiwiZGF0YWJhc2VVUkkiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQSxNQUFNO0FBQUVBLEVBQUFBO0FBQUYsSUFBeUJDLE9BQU8sQ0FBQyx1QkFBRCxDQUF0Qzs7QUFDQSxNQUFNQyxVQUFVLEdBQUcsQ0FBQyxNQUFNO0FBQ3hCLE1BQUlDLE1BQU0sR0FBRyxTQUFiOztBQUNBLE1BQUksT0FBT0MsT0FBUCxLQUFtQixXQUFuQixJQUFrQ0EsT0FBTyxDQUFDQyxHQUFSLENBQVlDLE9BQVosS0FBd0IsR0FBOUQsRUFBbUU7QUFDakVILElBQUFBLE1BQU0sR0FBRyxjQUFUO0FBQ0Q7O0FBQ0QsTUFBSUMsT0FBTyxDQUFDQyxHQUFSLENBQVlFLHdCQUFoQixFQUEwQztBQUN4Q0osSUFBQUEsTUFBTSxHQUFHLHlCQUFXQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUUsd0JBQXZCLENBQVQ7QUFDRDs7QUFDRCxTQUFPSixNQUFQO0FBQ0QsQ0FUa0IsR0FBbkI7O0FBV0EsTUFBTTtBQUFFSyxFQUFBQSxPQUFGO0FBQVdDLEVBQUFBO0FBQVgsSUFBcUIsQ0FBQyxNQUFNO0FBQ2hDLFFBQU1ELE9BQU8sR0FBR0osT0FBTyxDQUFDQyxHQUFSLENBQVlLLE9BQVosR0FBc0IsSUFBdEIsR0FBNkIsS0FBN0M7QUFDQSxTQUFPO0FBQUVGLElBQUFBLE9BQUY7QUFBV0MsSUFBQUEsS0FBSyxFQUFFRCxPQUFPLEdBQUcsU0FBSCxHQUFlRztBQUF4QyxHQUFQO0FBQ0QsQ0FIMEIsR0FBM0I7O0FBS0EsTUFBTUMsa0JBQWtCLEdBQUdDLE1BQU0sQ0FBQ0MsSUFBUCxDQUFZZCxrQkFBWixFQUFnQ2UsTUFBaEMsQ0FDekIsQ0FBQ0MsSUFBRCxFQUFPQyxHQUFQLEtBQWU7QUFDYixRQUFNQyxHQUFHLEdBQUdsQixrQkFBa0IsQ0FBQ2lCLEdBQUQsQ0FBOUI7O0FBQ0EsTUFBSUMsR0FBRyxDQUFDQyxjQUFKLENBQW1CLFNBQW5CLENBQUosRUFBbUM7QUFDakNILElBQUFBLElBQUksQ0FBQ0MsR0FBRCxDQUFKLEdBQVlDLEdBQUcsQ0FBQ0UsT0FBaEI7QUFDRDs7QUFDRCxTQUFPSixJQUFQO0FBQ0QsQ0FQd0IsRUFRekIsRUFSeUIsQ0FBM0I7QUFXQSxNQUFNSyxnQkFBZ0IsR0FBRztBQUN2QkMsRUFBQUEsUUFBUSxFQUFFbEIsT0FBTyxDQUFDQyxHQUFSLENBQVlrQixTQUFaLElBQXlCLEtBRFo7QUFFdkJyQixFQUFBQSxVQUZ1QjtBQUd2Qk0sRUFBQUEsT0FIdUI7QUFJdkJDLEVBQUFBO0FBSnVCLENBQXpCOztlQU9lSSxNQUFNLENBQUNXLE1BQVAsQ0FBYyxFQUFkLEVBQWtCWixrQkFBbEIsRUFBc0NTLGdCQUF0QyxDOzs7QUFDUixNQUFNSSxlQUFlLEdBQUdiLGtCQUFrQixDQUFDYyxXQUEzQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IG51bGxQYXJzZXIgfSBmcm9tICcuL09wdGlvbnMvcGFyc2Vycyc7XG5jb25zdCB7IFBhcnNlU2VydmVyT3B0aW9ucyB9ID0gcmVxdWlyZSgnLi9PcHRpb25zL0RlZmluaXRpb25zJyk7XG5jb25zdCBsb2dzRm9sZGVyID0gKCgpID0+IHtcbiAgbGV0IGZvbGRlciA9ICcuL2xvZ3MvJztcbiAgaWYgKHR5cGVvZiBwcm9jZXNzICE9PSAndW5kZWZpbmVkJyAmJiBwcm9jZXNzLmVudi5URVNUSU5HID09PSAnMScpIHtcbiAgICBmb2xkZXIgPSAnLi90ZXN0X2xvZ3MvJztcbiAgfVxuICBpZiAocHJvY2Vzcy5lbnYuUEFSU0VfU0VSVkVSX0xPR1NfRk9MREVSKSB7XG4gICAgZm9sZGVyID0gbnVsbFBhcnNlcihwcm9jZXNzLmVudi5QQVJTRV9TRVJWRVJfTE9HU19GT0xERVIpO1xuICB9XG4gIHJldHVybiBmb2xkZXI7XG59KSgpO1xuXG5jb25zdCB7IHZlcmJvc2UsIGxldmVsIH0gPSAoKCkgPT4ge1xuICBjb25zdCB2ZXJib3NlID0gcHJvY2Vzcy5lbnYuVkVSQk9TRSA/IHRydWUgOiBmYWxzZTtcbiAgcmV0dXJuIHsgdmVyYm9zZSwgbGV2ZWw6IHZlcmJvc2UgPyAndmVyYm9zZScgOiB1bmRlZmluZWQgfTtcbn0pKCk7XG5cbmNvbnN0IERlZmluaXRpb25EZWZhdWx0cyA9IE9iamVjdC5rZXlzKFBhcnNlU2VydmVyT3B0aW9ucykucmVkdWNlKFxuICAobWVtbywga2V5KSA9PiB7XG4gICAgY29uc3QgZGVmID0gUGFyc2VTZXJ2ZXJPcHRpb25zW2tleV07XG4gICAgaWYgKGRlZi5oYXNPd25Qcm9wZXJ0eSgnZGVmYXVsdCcpKSB7XG4gICAgICBtZW1vW2tleV0gPSBkZWYuZGVmYXVsdDtcbiAgICB9XG4gICAgcmV0dXJuIG1lbW87XG4gIH0sXG4gIHt9XG4pO1xuXG5jb25zdCBjb21wdXRlZERlZmF1bHRzID0ge1xuICBqc29uTG9nczogcHJvY2Vzcy5lbnYuSlNPTl9MT0dTIHx8IGZhbHNlLFxuICBsb2dzRm9sZGVyLFxuICB2ZXJib3NlLFxuICBsZXZlbCxcbn07XG5cbmV4cG9ydCBkZWZhdWx0IE9iamVjdC5hc3NpZ24oe30sIERlZmluaXRpb25EZWZhdWx0cywgY29tcHV0ZWREZWZhdWx0cyk7XG5leHBvcnQgY29uc3QgRGVmYXVsdE1vbmdvVVJJID0gRGVmaW5pdGlvbkRlZmF1bHRzLmRhdGFiYXNlVVJJO1xuIl19