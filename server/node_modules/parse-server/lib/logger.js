'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.setLogger = setLogger;
exports.getLogger = getLogger;

var _defaults = _interopRequireDefault(require("./defaults"));

var _WinstonLoggerAdapter = require("./Adapters/Logger/WinstonLoggerAdapter");

var _LoggerController = require("./Controllers/LoggerController");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function defaultLogger() {
  const options = {
    logsFolder: _defaults.default.logsFolder,
    jsonLogs: _defaults.default.jsonLogs,
    verbose: _defaults.default.verbose,
    silent: _defaults.default.silent
  };
  const adapter = new _WinstonLoggerAdapter.WinstonLoggerAdapter(options);
  return new _LoggerController.LoggerController(adapter, null, options);
}

let logger = defaultLogger();

function setLogger(aLogger) {
  logger = aLogger;
}

function getLogger() {
  return logger;
} // for: `import logger from './logger'`


Object.defineProperty(module.exports, 'default', {
  get: getLogger
}); // for: `import { logger } from './logger'`

Object.defineProperty(module.exports, 'logger', {
  get: getLogger
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9sb2dnZXIuanMiXSwibmFtZXMiOlsiZGVmYXVsdExvZ2dlciIsIm9wdGlvbnMiLCJsb2dzRm9sZGVyIiwiZGVmYXVsdHMiLCJqc29uTG9ncyIsInZlcmJvc2UiLCJzaWxlbnQiLCJhZGFwdGVyIiwiV2luc3RvbkxvZ2dlckFkYXB0ZXIiLCJMb2dnZXJDb250cm9sbGVyIiwibG9nZ2VyIiwic2V0TG9nZ2VyIiwiYUxvZ2dlciIsImdldExvZ2dlciIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwibW9kdWxlIiwiZXhwb3J0cyIsImdldCJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7QUFFQSxTQUFTQSxhQUFULEdBQXlCO0FBQ3ZCLFFBQU1DLE9BQU8sR0FBRztBQUNkQyxJQUFBQSxVQUFVLEVBQUVDLGtCQUFTRCxVQURQO0FBRWRFLElBQUFBLFFBQVEsRUFBRUQsa0JBQVNDLFFBRkw7QUFHZEMsSUFBQUEsT0FBTyxFQUFFRixrQkFBU0UsT0FISjtBQUlkQyxJQUFBQSxNQUFNLEVBQUVILGtCQUFTRztBQUpILEdBQWhCO0FBTUEsUUFBTUMsT0FBTyxHQUFHLElBQUlDLDBDQUFKLENBQXlCUCxPQUF6QixDQUFoQjtBQUNBLFNBQU8sSUFBSVEsa0NBQUosQ0FBcUJGLE9BQXJCLEVBQThCLElBQTlCLEVBQW9DTixPQUFwQyxDQUFQO0FBQ0Q7O0FBRUQsSUFBSVMsTUFBTSxHQUFHVixhQUFhLEVBQTFCOztBQUVPLFNBQVNXLFNBQVQsQ0FBbUJDLE9BQW5CLEVBQTRCO0FBQ2pDRixFQUFBQSxNQUFNLEdBQUdFLE9BQVQ7QUFDRDs7QUFFTSxTQUFTQyxTQUFULEdBQXFCO0FBQzFCLFNBQU9ILE1BQVA7QUFDRCxDLENBRUQ7OztBQUNBSSxNQUFNLENBQUNDLGNBQVAsQ0FBc0JDLE1BQU0sQ0FBQ0MsT0FBN0IsRUFBc0MsU0FBdEMsRUFBaUQ7QUFDL0NDLEVBQUFBLEdBQUcsRUFBRUw7QUFEMEMsQ0FBakQsRSxDQUlBOztBQUNBQyxNQUFNLENBQUNDLGNBQVAsQ0FBc0JDLE1BQU0sQ0FBQ0MsT0FBN0IsRUFBc0MsUUFBdEMsRUFBZ0Q7QUFDOUNDLEVBQUFBLEdBQUcsRUFBRUw7QUFEeUMsQ0FBaEQiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5pbXBvcnQgZGVmYXVsdHMgZnJvbSAnLi9kZWZhdWx0cyc7XG5pbXBvcnQgeyBXaW5zdG9uTG9nZ2VyQWRhcHRlciB9IGZyb20gJy4vQWRhcHRlcnMvTG9nZ2VyL1dpbnN0b25Mb2dnZXJBZGFwdGVyJztcbmltcG9ydCB7IExvZ2dlckNvbnRyb2xsZXIgfSBmcm9tICcuL0NvbnRyb2xsZXJzL0xvZ2dlckNvbnRyb2xsZXInO1xuXG5mdW5jdGlvbiBkZWZhdWx0TG9nZ2VyKCkge1xuICBjb25zdCBvcHRpb25zID0ge1xuICAgIGxvZ3NGb2xkZXI6IGRlZmF1bHRzLmxvZ3NGb2xkZXIsXG4gICAganNvbkxvZ3M6IGRlZmF1bHRzLmpzb25Mb2dzLFxuICAgIHZlcmJvc2U6IGRlZmF1bHRzLnZlcmJvc2UsXG4gICAgc2lsZW50OiBkZWZhdWx0cy5zaWxlbnQsXG4gIH07XG4gIGNvbnN0IGFkYXB0ZXIgPSBuZXcgV2luc3RvbkxvZ2dlckFkYXB0ZXIob3B0aW9ucyk7XG4gIHJldHVybiBuZXcgTG9nZ2VyQ29udHJvbGxlcihhZGFwdGVyLCBudWxsLCBvcHRpb25zKTtcbn1cblxubGV0IGxvZ2dlciA9IGRlZmF1bHRMb2dnZXIoKTtcblxuZXhwb3J0IGZ1bmN0aW9uIHNldExvZ2dlcihhTG9nZ2VyKSB7XG4gIGxvZ2dlciA9IGFMb2dnZXI7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRMb2dnZXIoKSB7XG4gIHJldHVybiBsb2dnZXI7XG59XG5cbi8vIGZvcjogYGltcG9ydCBsb2dnZXIgZnJvbSAnLi9sb2dnZXInYFxuT2JqZWN0LmRlZmluZVByb3BlcnR5KG1vZHVsZS5leHBvcnRzLCAnZGVmYXVsdCcsIHtcbiAgZ2V0OiBnZXRMb2dnZXIsXG59KTtcblxuLy8gZm9yOiBgaW1wb3J0IHsgbG9nZ2VyIH0gZnJvbSAnLi9sb2dnZXInYFxuT2JqZWN0LmRlZmluZVByb3BlcnR5KG1vZHVsZS5leHBvcnRzLCAnbG9nZ2VyJywge1xuICBnZXQ6IGdldExvZ2dlcixcbn0pO1xuIl19