{"version":3,"sources":["ng://ng-connection-service/lib/connection-service.service.ts","ng://ng-connection-service/lib/connection-service.module.ts"],"names":["ConnectionService","this","connectionMonitor","Observable","observer","window","addEventListener","e","next","prototype","monitor","Injectable","args","providedIn","ConnectionServiceModule","NgModule","imports","providers"],"mappings":"wTAAA,IAAAA,EAAA,WASE,SAAAA,IACEC,KAAKC,kBAAoB,IAAIC,EAAAA,WAAW,SAACC,GACvCC,OAAOC,iBAAiB,UAAW,SAACC,GAClCH,EAASI,MAAK,KAEhBH,OAAOC,iBAAiB,SAAU,SAACC,GACjCH,EAASI,MAAK,cAKpBR,EAAAS,UAAAC,QAAA,WACE,OAAOT,KAAKC,uCAlBfS,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,sJAJd,GCAAC,EAAA,oDAGCC,EAAAA,SAAQH,KAAA,CAAC,CACRI,QAAS,GAETC,UAAU,CAACjB,SANb","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConnectionService {\n  private connectionMonitor: Observable<boolean>;\n  \n  constructor() {\n    this.connectionMonitor = new Observable((observer) => {\n      window.addEventListener('offline', (e) => {\n        observer.next(false);\n      });\n      window.addEventListener('online', (e) => {\n        observer.next(true);\n      });\n    });\n  }\n\n  monitor(): Observable<boolean> {\n    return this.connectionMonitor;\n  }\n}\n","import { NgModule } from '@angular/core';\r\nimport { ConnectionService } from './connection-service.service';\r\n\r\n@NgModule({\r\n  imports: [\r\n  ],\r\n  providers:[ConnectionService]\r\n})\r\nexport class ConnectionServiceModule { }\r\n"]}