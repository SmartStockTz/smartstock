{
  "version": 3,
  "file": "ngforage.umd.js",
  "sources": [
    "ng://ngforage/out/NgForage/dedicated/DedicatedInstanceFactory.ts",
    "ng://ngforage/out/NgForage/dedicated/NgForageDedicated.ts",
    "ng://ngforage/out/NgForage/dedicated/NgForageCacheDedicated.ts",
    "ng://ngforage/out/NgForage/cache/NgForageCache.service.ts",
    "ng://ngforage/out/NgForage/cache/CachedItemImpl.ts",
    "ng://ngforage/out/NgForage/main/NgForage.service.ts",
    "ng://ngforage/out/NgForage/config/BaseConfigurableImpl.service.ts",
    "ng://ngforage/out/NgForage/instance-factory/InstanceFactory.service.ts",
    "ng://ngforage/out/NgForage/config/NgForageConfig.service.ts",
    "ng://ngforage/out/NgForage/NgForage.module.ts",
    "ng://ngforage/out/NgForage/DEFAULT_CONFIG.token.ts",
    "ng://ngforage/out/NgForage/session-storage/index.ts",
    "ng://ngforage/out/NgForage/session-storage/setItem.ts",
    "ng://ngforage/out/NgForage/session-storage/removeItem.ts",
    "ng://ngforage/out/NgForage/session-storage/length.ts",
    "ng://ngforage/out/NgForage/session-storage/keys.ts",
    "ng://ngforage/out/NgForage/session-storage/key.ts",
    "ng://ngforage/out/NgForage/session-storage/iterate.ts",
    "ng://ngforage/out/NgForage/session-storage/getItem.ts",
    "ng://ngforage/out/NgForage/session-storage/normalizeKey.ts",
    "ng://ngforage/out/NgForage/session-storage/dropInstance.ts",
    "ng://ngforage/out/NgForage/session-storage/getCallback.ts",
    "ng://ngforage/out/NgForage/session-storage/clear.ts",
    "ng://ngforage/out/NgForage/session-storage/executeCallback.ts",
    "ng://ngforage/out/NgForage/session-storage/_initStorage.ts",
    "ng://ngforage/out/NgForage/session-storage/_isSessionStorageUsable.ts",
    "ng://ngforage/out/NgForage/session-storage/checkIfSessionStorageThrows.ts",
    "ng://ngforage/out/NgForage/session-storage/_getKeyPrefix.ts",
    "ng://ngforage/out/NgForage/imports/serializer.ts",
    "ng://ngforage/out/NgForage/imports/localforage.ts",
    "ng://ngforage/node_modules/tslib/tslib.es6.js"
  ],
  "sourcesContent": [
    "import {Injectable} from '@angular/core';\nimport {NgForageCache} from '../cache/NgForageCache.service';\nimport {NgForageConfig} from '../config/NgForageConfig.service';\nimport {NgForageOptions} from '../config/NgForageOptions';\nimport {InstanceFactory} from '../instance-factory/InstanceFactory.service';\nimport {NgForage} from '../main/NgForage.service';\nimport {NgForageCacheDedicated} from './NgForageCacheDedicated';\nimport {NgForageDedicated} from './NgForageDedicated';\n\n/** @internal */\nconst conf$ = Symbol('NgForageConfig');\n/** @internal */\nconst if$ = Symbol('InstanceFactory');\n\n@Injectable({providedIn: 'root'})\nexport class DedicatedInstanceFactory {\n  public constructor(conf: NgForageConfig, instFact: InstanceFactory) {\n    this[conf$] = conf;\n    this[if$] = instFact;\n  }\n\n  public createCache(config?: NgForageOptions): NgForageCache {\n    const inst = new NgForageCacheDedicated(<NgForageConfig>this[conf$], <InstanceFactory>this[if$]);\n    if (config) {\n      inst.configure(config);\n    }\n\n    return inst;\n  }\n\n  public createNgForage(config?: NgForageOptions): NgForage {\n    const inst = new NgForageDedicated(<NgForageConfig>this[conf$], <InstanceFactory>this[if$]);\n    if (config) {\n      inst.configure(config);\n    }\n\n    return inst;\n  }\n}\n",
    "import {NgForageOptions} from '../config/NgForageOptions';\nimport {NgForage} from '../main/NgForage.service';\n\n/** @internal */\nexport class NgForageDedicated extends NgForage {\n\n  public clone(config?: NgForageOptions): NgForage {\n    const inst = new NgForageDedicated(this.baseConfig, this.fact);\n    inst.configure(Object.assign(this.finalConfig, config || {}));\n\n    return inst;\n  }\n}\n\nObject.defineProperty(NgForageDedicated.prototype, Symbol.toStringTag, {value: 'NgForage (dedicated)'});\n",
    "import {NgForageCache} from '../cache/NgForageCache.service';\nimport {NgForageOptions} from '../config/NgForageOptions';\n\n/** @internal */\nexport class NgForageCacheDedicated extends NgForageCache {\n\n  public clone(config?: NgForageOptions): NgForageCache {\n    const inst = new NgForageCacheDedicated(this.baseConfig, this.fact);\n    inst.configure(Object.assign(this.finalConfig, config || {}));\n\n    return inst;\n  }\n}\n\nObject.defineProperty(NgForageCacheDedicated.prototype, Symbol.toStringTag, {value: 'NgForageCache (dedicated)'});\n",
    "import {Injectable} from '@angular/core';\nimport {CacheConfigurable} from '../config/CacheConfigurable';\nimport {NgForageOptions} from '../config/NgForageOptions';\nimport {NgForage} from '../main/NgForage.service';\nimport {CachedItem} from './CachedItem';\nimport {CachedItemImpl} from './CachedItemImpl';\n\n/** @internal */\ninterface CacheKeys {\n  data: string;\n  expiry: string;\n}\n\n/** @internal */\nfunction calculateCacheKeys(mainKey: string): CacheKeys {\n  return {\n    data: `${mainKey}_data`,\n    expiry: `${mainKey}_expiry`\n  };\n}\n\n/** @internal */\nfunction toCachedItem<T>(r: [T, number]): CachedItem<T> {\n  return new CachedItemImpl<T>(r[0], r[1]);\n}\n\n/** @internal */\nfunction head<T>(r: [T, number]) {\n  return r[0];\n}\n\n/** @internal */\n// tslint:disable-next-line:no-empty\nfunction toVoid(): void {\n\n}\n\n/**\n * An extension of {@link NgForage} which adds expiration support\n */\n@Injectable({providedIn: 'root'})\nexport class NgForageCache extends NgForage implements CacheConfigurable {\n\n  /**\n   * Cache time in milliseconds\n   * @default 300000\n   */\n  public get cacheTime(): number {\n    return 'cacheTime' in this.config ? this.config.cacheTime : this.baseConfig.cacheTime;\n  }\n\n  public set cacheTime(t: number) {\n    this.config.cacheTime = t;\n    this.storeNeedsRecalc = true;\n  }\n\n  /** @inheritDoc */\n  public clone(config?: NgForageOptions): NgForageCache {\n    const inst = new NgForageCache(this.baseConfig, this.fact);\n    inst.configure(Object.assign(this.finalConfig, config || {}));\n\n    return inst;\n  }\n\n  /**\n   * Retrieve data\n   * @param key Data key\n   */\n  public getCached<T>(key: string): Promise<CachedItem<T>> {\n    const keys = calculateCacheKeys(key);\n    const dataPromise = this.getItem<T>(keys.data);\n    const expiryPromise = this.getItem<number>(keys.expiry);\n\n    return Promise.all([dataPromise, expiryPromise]).then(toCachedItem);\n  }\n\n  /**\n   * Remove data\n   * @param key Data key\n   */\n  public removeCached(key: string): Promise<void> {\n    const keys = calculateCacheKeys(key);\n\n    const dataPromise = this.removeItem(keys.data);\n    const expiryPromise = this.removeItem(keys.expiry);\n\n    return Promise.all([dataPromise, expiryPromise]).then(toVoid);\n  }\n\n  /**\n   * Set data\n   * @param key Data key\n   * @param data Data to set\n   * @param [cacheTime] Override cache set in {@link CacheConfigurable#cacheTime global or instance config}.\n   */\n  public setCached<T>(key: string, data: T, cacheTime?: number): Promise<T> {\n    const keys = calculateCacheKeys(key);\n    const expiry = typeof cacheTime === 'number' ? cacheTime : this.cacheTime;\n\n    const dataPromise = this.setItem<T>(keys.data, data);\n    const expiryPromise = this.setItem<number>(keys.expiry, Date.now() + expiry);\n\n    return Promise.all([dataPromise, expiryPromise]).then(head);\n  }\n\n  /** @internal */\n  public toJSON(): NgForageOptions {\n    const ass: Partial<NgForageOptions> = {cacheTime: this.cacheTime};\n\n    return Object.assign(super.toJSON(), ass);\n  }\n}\n\nObject.defineProperty(NgForageCache.prototype, Symbol.toStringTag, {value: 'NgForageCache'});\n",
    "import {LazyGetter} from 'typescript-lazy-get-decorator';\nimport {CachedItem} from './CachedItem';\n\n/** @internal */\nexport class CachedItemImpl<T> implements CachedItem<T> {\n\n  public readonly expires: Date;\n\n  public constructor(public readonly data: T, expiryTime: number) {\n    this.expires = new Date(typeof expiryTime === 'number' ? expiryTime : 0);\n  }\n\n  @LazyGetter()\n  public get expired(): boolean {\n    return this.expiresIn === 0;\n  }\n\n  @LazyGetter()\n  public get expiresIn(): number {\n    return Math.max(0, this.expires.getTime() - Date.now());\n  }\n\n  @LazyGetter()\n  public get hasData(): boolean {\n    return this.data !== null;\n  }\n\n  public toJSON(): CachedItem<T> {\n    return {\n      data: this.data,\n      expired: this.expired,\n      expires: this.expires,\n      expiresIn: this.expiresIn,\n      hasData: this.hasData\n    };\n  }\n\n  public toString(): string {\n    return JSON.stringify(this.toJSON());\n  }\n}\n\nObject.defineProperty(CachedItemImpl.prototype, Symbol.toStringTag, {value: 'CachedItem'});\n",
    "import {Injectable} from '@angular/core';\nimport {BaseConfigurable} from '../config/BaseConfigurable';\nimport {BaseConfigurableImpl} from '../config/BaseConfigurableImpl.service';\nimport {NgForageOptions} from '../config/NgForageOptions';\n\n/**\n * Cache instance\n */\n@Injectable({providedIn: 'root'})\nexport class NgForage extends BaseConfigurableImpl implements BaseConfigurable {\n\n  /**\n   * Returns the name of the driver being used, or null if none can be used.\n   */\n  public get activeDriver(): string {\n    return this.store.driver();\n  }\n\n  /**\n   * Removes every key from the database, returning it to a blank slate.\n   *\n   * clear() will remove <b>every item in the offline store</b>. Use this method with caution.\n   */\n  public clear(): Promise<void> {\n    return this.store.clear();\n  }\n\n  /**\n   * Make a clone of the instance\n   * @param config Optional configuration\n   */\n  public clone(config?: NgForageOptions): NgForage {\n    const inst = new NgForage(this.baseConfig, this.fact);\n    inst.configure(Object.assign(this.finalConfig, config || {}));\n\n    return inst;\n  }\n\n  /**\n   * Gets an item from the storage library.\n   * If the key does not exist, getItem() will return null.\n   * @param key Data key\n   */\n  public getItem<T>(key: string): Promise<T> {\n    return this.store.getItem<T>(key);\n  }\n\n  /**\n   * Iterate over all value/key pairs in datastore.\n   * <i>iteratee</i> is called once for each pair, with the following arguments:\n   * <ol>\n   *   <li>Value</li>\n   *   <li>Key</li>\n   *   <li>iterationNumber - one-based number</li>\n   * </ol>\n   * iterate() supports early exit by returning non undefined value inside iteratorCallback callback.\n   * @param iteratee\n   */\n  public iterate<T, U>(iteratee: (value: T, key: string, iterationNumber: number) => U): Promise<U> {\n    return this.store.iterate(iteratee);\n  }\n\n  /**\n   * Get the name of a key based on its ID.\n   * @param index\n   */\n  public key(index: number): Promise<string> {\n    return this.store.key(index);\n  }\n\n  /**\n   * Get the list of all keys in the datastore.\n   */\n  public keys(): Promise<string[]> {\n    return this.store.keys();\n  }\n\n  /**\n   * Gets the number of keys in the offline store (i.e. its “length”).\n   */\n  public length(): Promise<number> {\n    return this.store.length();\n  }\n\n  /**\n   * Even though localForage queues up all of its data API method calls,\n   * ready() provides a way to determine whether the asynchronous driver initialization process has finished.\n   * That’s useful in cases like when we want to know which driver localForage has settled down using.\n   */\n  public ready(): Promise<void> {\n    return this.store.ready();\n  }\n\n  /**\n   * Removes the value of a key from the offline store.\n   * @param key Data key\n   */\n  public removeItem(key: string): Promise<void> {\n    return this.store.removeItem(key);\n  }\n\n  /**\n   * Saves data to an offline store. You can store the following types of JavaScript objects:\n   * <ul>\n   *  <li>Array</li>\n   *  <li>ArrayBuffer</li>\n   *  <li>Blob</li>\n   *  <li>Float32Array</li>\n   *  <li>Float64Array</li>\n   *  <li>Int8Array</li>\n   *  <li>Int16Array</li>\n   *  <li>Int32Array</li>\n   *  <li>Number</li>\n   *  <li>Object</li>\n   *  <li>Uint8Array</li>\n   *  <li>Uint8ClampedArray</li>\n   *  <li>Uint16Array</li>\n   *  <li>Uint32Array</li>\n   *  <li>String</li>\n   * </ul>\n   * @param key Data key\n   * @param data Data\n   */\n  public setItem<T>(key: string, data: T): Promise<T> {\n    return this.store.setItem<T>(key, data);\n  }\n\n  /**\n   * Check whether the given driver is supported/registered.\n   * @param driver Driver name\n   */\n  public supports(driver: string): boolean {\n    return this.store.supports(driver);\n  }\n}\n\nObject.defineProperty(NgForage.prototype, Symbol.toStringTag, {value: 'NgForage'});\n",
    "import {Inject} from '@angular/core';\nimport 'localforage';\nimport {InstanceFactory} from '../instance-factory/InstanceFactory.service';\nimport {BaseConfigurable} from './BaseConfigurable';\nimport {NgForageConfig} from './NgForageConfig.service';\nimport {NgForageOptions} from './NgForageOptions';\n\n/** @internal */\nconst store$ = Symbol('Store');\n\n/**\n * Abstract service-level configuration layer for NgForage\n */\nexport abstract class BaseConfigurableImpl implements BaseConfigurable {\n\n  /** @internal */\n  protected readonly baseConfig: NgForageConfig;\n  /** @internal */\n  protected readonly config: NgForageOptions = {};\n  /** @internal */\n  protected readonly fact: InstanceFactory;\n  /** @internal */\n  protected storeNeedsRecalc = true;\n\n  /** @internal */\n  public constructor(@Inject(NgForageConfig) config: NgForageConfig,\n                     @Inject(InstanceFactory) instanceFactory: InstanceFactory) {\n    this.baseConfig = config;\n    this.fact = instanceFactory;\n  }\n\n  /**\n   * A description of the database, essentially for developer usage.\n   * @default \"\"\n   */\n  public get description(): string {\n    return 'description' in this.config ? this.config.description : this.baseConfig.description;\n  }\n\n  public set description(v: string) {\n    this.config.description = v;\n    this.storeNeedsRecalc = true;\n  }\n\n  /**\n   * The preferred driver(s) to use.\n   * @see {@link NgForageConfig#DRIVER_INDEXEDDB}\n   * @see {@link NgForageConfig#DRIVER_WEBSQL}\n   * @see {@link NgForageConfig#DRIVER_LOCALSTORAGE}\n   * @see {@link NgForageConfig#DRIVER_SESSIONSTORAGE}\n   * @default IndexedDB, WebSQL and localStorage\n   */\n  public get driver(): string | string[] {\n    return 'driver' in this.config ? this.config.driver : this.baseConfig.driver;\n  }\n\n  public set driver(v: string | string[]) {\n    this.config.driver = v;\n    this.storeNeedsRecalc = true;\n  }\n\n  /**\n   * The name of the database. May appear during storage limit prompts. Useful to use the name of your app here.\n   * In localStorage, this is used as a key prefix for all keys stored in localStorage.\n   * @default ngForage\n   */\n  public get name(): string {\n    return 'name' in this.config ? this.config.name : this.baseConfig.name;\n  }\n\n  public set name(v: string) {\n    this.config.name = v;\n    this.storeNeedsRecalc = true;\n  }\n\n  /**\n   * The size of the database in bytes. Used only in WebSQL for now.\n   * @default 4980736\n   */\n  public get size(): number {\n    return 'size' in this.config ? this.config.size : this.baseConfig.size;\n  }\n\n  public set size(v: number) {\n    this.config.size = v;\n    this.storeNeedsRecalc = true;\n  }\n\n  /**\n   * The name of the datastore.\n   * In IndexedDB this is the dataStore,\n   * in WebSQL this is the name of the key/value table in the database.\n   * Must be alphanumeric, with underscores.\n   * Any non-alphanumeric characters will be converted to underscores.\n   * @default ng_forage\n   */\n  public get storeName(): string {\n    return 'storeName' in this.config ? this.config.storeName : this.baseConfig.storeName;\n  }\n\n  public set storeName(v: string) {\n    this.config.storeName = v;\n    this.storeNeedsRecalc = true;\n  }\n\n  /**\n   * The version of your database. May be used for upgrades in the future; currently unused.\n   * @default 1.0\n   */\n  public get version(): number {\n    return 'version' in this.config ? this.config.version : this.baseConfig.version;\n  }\n\n  public set version(v: number) {\n    this.config.version = v;\n    this.storeNeedsRecalc = true;\n  }\n\n  /** @internal */\n  protected get finalConfig(): NgForageOptions {\n    return Object.assign(\n      {},\n      this.baseConfig.config,\n      this.config\n    );\n  }\n\n  /** @internal */\n  protected get store(): LocalForage {\n    if (this.storeNeedsRecalc || !this[store$]) {\n      this[store$] = this.fact.getInstance(this.finalConfig);\n      this.storeNeedsRecalc = false;\n    }\n\n    return this[store$];\n  }\n\n  /**\n   * Bulk-set configuration options\n   * @param opts The configuration\n   */\n  public configure(opts: NgForageOptions): this {\n    opts = opts || {};\n\n    if ('driver' in opts && opts.driver.slice) {\n      opts.driver = opts.driver.slice();\n    }\n\n    Object.assign(this.config, opts);\n    this.storeNeedsRecalc = true;\n\n    return this;\n  }\n\n  /** @internal */\n  public toJSON(): Partial<NgForageOptions> {\n    return {\n      description: this.description,\n      driver: this.driver,\n      name: this.name,\n      size: this.size,\n      storeName: this.storeName,\n      version: this.version\n    };\n  }\n\n  public toString(): string {\n    return JSON.stringify(this.toJSON());\n  }\n}\n\nObject.defineProperty(BaseConfigurableImpl.prototype, Symbol.toStringTag, {value: 'BaseConfigurable'});\n",
    "import {Injectable} from '@angular/core';\nimport 'localforage';\nimport {NgForageConfig} from '../config/NgForageConfig.service';\nimport {NgForageOptions} from '../config/NgForageOptions';\nimport {localForage as lf} from '../imports/localforage';\n\n/** @internal */\ninterface InstanceMap {\n  [hash: string]: LocalForage;\n}\n\n/** @internal */\nconst stores: InstanceMap = {};\n\n/** @internal */\nfunction getDriverString(driver?: string | string[]) {\n  if (!driver) {\n    return '';\n  } else if (typeof driver === 'string') {\n    return driver;\n  } else {\n    return driver.slice().sort().join(',');\n  }\n}\n\n/** @internal */\nfunction getHash(cfg: NgForageOptions): string {\n  return [\n    getDriverString(cfg.driver),\n    cfg.name,\n    cfg.size,\n    cfg.storeName,\n    cfg.version,\n    cfg.description,\n    cfg.cacheTime\n  ].join('|');\n}\n\n/** @internal */\nconst conf$ = Symbol('Config');\n\n/**\n * Creates localForage instances\n */\n@Injectable({providedIn: 'root'})\nexport class InstanceFactory {\n\n  /** @internal */\n  public constructor(conf: NgForageConfig) {\n    this[conf$] = conf;\n  }\n\n  public getInstance(cfg: NgForageOptions): LocalForage {\n    cfg = Object.assign({}, this[conf$].config, cfg || {});\n    const hash = getHash(cfg);\n\n    if (!stores[hash]) {\n      stores[hash] = lf.createInstance(cfg);\n    }\n\n    return stores[hash];\n  }\n}\n\nObject.defineProperty(InstanceFactory.prototype, Symbol.toStringTag, {value: 'InstanceFactory'});\n",
    "import {Inject, Injectable, Optional} from '@angular/core';\nimport 'localforage';\nimport {DEFAULT_CONFIG} from '../DEFAULT_CONFIG.token';\nimport {localForage as lf} from '../imports/localforage';\nimport {_driver} from '../session-storage';\nimport {BaseConfigurable} from './BaseConfigurable';\nimport {CacheConfigurable} from './CacheConfigurable';\nimport {NgForageOptions} from './NgForageOptions';\n\nconst $defaultConfig = Symbol('Default Config');\n\n/**\n * Global/default configuration\n */\n@Injectable({providedIn: 'root'})\nexport class NgForageConfig implements BaseConfigurable, CacheConfigurable {\n\n  /** The IndexedDB driver */\n  public static readonly DRIVER_INDEXEDDB: string = lf.INDEXEDDB;\n  /** The localStorage driver */\n  public static readonly DRIVER_LOCALSTORAGE: string = lf.LOCALSTORAGE;\n  /** The sessionStorage driver */\n  public static readonly DRIVER_SESSIONSTORAGE: string = _driver;\n  /** The WebSQL driver */\n  public static readonly DRIVER_WEBSQL: string = lf.WEBSQL;\n\n  public constructor(@Optional() @Inject(DEFAULT_CONFIG) conf: NgForageOptions) {\n    this[$defaultConfig] = {\n      cacheTime: 300000,\n      description: '',\n      driver: [lf.INDEXEDDB, lf.WEBSQL, lf.LOCALSTORAGE],\n      name: 'ngForage',\n      size: 4980736,\n      storeName: 'ng_forage',\n      version: 1\n    };\n    if (conf) {\n      this.configure(conf);\n    }\n  }\n\n  /**\n   * Cache time in milliseconds\n   * @default 300000\n   */\n  public get cacheTime(): number {\n    return this[$defaultConfig].cacheTime;\n  }\n\n  public set cacheTime(t: number) {\n    this[$defaultConfig].cacheTime = t;\n  }\n\n  /**\n   * Get the compiled configuration\n   */\n  public get config(): NgForageOptions {\n    return {\n      cacheTime: this.cacheTime,\n      description: this.description,\n      driver: this.driver,\n      name: this.name,\n      size: this.size,\n      storeName: this.storeName,\n      version: this.version\n    };\n  }\n\n  /**\n   * A description of the database, essentially for developer usage.\n   * @default\n   */\n  public get description(): string {\n    return this[$defaultConfig].description;\n  }\n\n  public set description(v: string) {\n    this[$defaultConfig].description = v;\n  }\n\n  /**\n   * The preferred driver(s) to use.\n   * @see {@link NgForageConfig#DRIVER_INDEXEDDB}\n   * @see {@link NgForageConfig#DRIVER_WEBSQL}\n   * @see {@link NgForageConfig#DRIVER_LOCALSTORAGE}\n   * @see {@link NgForageConfig#DRIVER_SESSIONSTORAGE}\n   */\n  public get driver(): string | string[] {\n    if (typeof this[$defaultConfig].driver === 'string') {\n      return this[$defaultConfig].driver;\n    }\n\n    return this[$defaultConfig].driver.slice();\n  }\n\n  public set driver(v: string | string[]) {\n    this[$defaultConfig].driver = v;\n  }\n\n  /**\n   * The name of the database. May appear during storage limit prompts. Useful to use the name of your app here.\n   * In localStorage, this is used as a key prefix for all keys stored in localStorage.\n   * @default ngForage\n   */\n  public get name(): string {\n    return this[$defaultConfig].name;\n  }\n\n  public set name(v: string) {\n    this[$defaultConfig].name = v;\n  }\n\n  /**\n   * The size of the database in bytes. Used only in WebSQL for now.\n   * @default 4980736\n   */\n  public get size(): number {\n    return this[$defaultConfig].size;\n  }\n\n  public set size(v: number) {\n    this[$defaultConfig].size = v;\n  }\n\n  /**\n   * The name of the datastore.\n   * In IndexedDB this is the dataStore,\n   * in WebSQL this is the name of the key/value table in the database.\n   * Must be alphanumeric, with underscores.\n   * Any non-alphanumeric characters will be converted to underscores.\n   * @default ng_forage\n   */\n  public get storeName(): string {\n    return this[$defaultConfig].storeName;\n  }\n\n  public set storeName(v: string) {\n    this[$defaultConfig].storeName = v;\n  }\n\n  /**\n   * The version of your database. May be used for upgrades in the future; currently unused.\n   * @default 1.0\n   */\n  public get version(): number {\n    return this[$defaultConfig].version;\n  }\n\n  public set version(v: number) {\n    this[$defaultConfig].version = v;\n  }\n\n  /**\n   * Bulk-set configuration options\n   * @param opts The configuration\n   */\n  public configure(opts: NgForageOptions): this {\n    opts = opts || {};\n\n    if ('driver' in opts && opts.driver.slice) {\n      opts.driver = opts.driver.slice();\n    }\n\n    Object.assign(this[$defaultConfig], opts);\n\n    return this;\n  }\n\n  /**\n   * Define a driver\n   *\n   * You’ll want to make sure you accept a callback argument and that you pass the same arguments to callbacks as the\n   * default drivers do. You’ll also want to resolve or reject promises.\n   * Check any of the {@link https://github.com/mozilla/localForage/tree/master/src/drivers default drivers}\n   * for an idea of how to implement your own, custom driver.\n   * @param spec Driver spec\n   */\n  public defineDriver(spec: LocalForageDriver): Promise<void> {\n    return lf.defineDriver(spec);\n  }\n\n  /** @internal */\n  public toJSON(): NgForageOptions {\n    return this.config;\n  }\n\n  public toString(): string {\n    return JSON.stringify(this.toJSON());\n  }\n}\n\nObject.defineProperty(NgForageConfig.prototype, Symbol.toStringTag, {value: 'NgForageConfig'});\n",
    "import {ModuleWithProviders, NgModule} from '@angular/core';\nimport {NgForageOptions} from './config/NgForageOptions';\nimport {DEFAULT_CONFIG} from './DEFAULT_CONFIG.token';\n\n/**\n * NgForage core module\n */\n@NgModule({})\nexport class NgForageModule {\n\n  // istanbul ignore next\n  public static forRoot(config: Partial<NgForageOptions> = {}): ModuleWithProviders {\n    return {\n      ngModule: NgForageModule,\n      providers: [\n        {\n          provide: DEFAULT_CONFIG,\n          useValue: Object.assign({}, config)\n        }\n      ]\n    };\n  }\n}\n",
    "/** @internal */\nimport {InjectionToken} from '@angular/core';\nimport {NgForageOptions} from './config/NgForageOptions';\n\nexport const DEFAULT_CONFIG = new InjectionToken<NgForageOptions>('Default NgForage config');\n",
    "import {localForage as lf} from '../imports/localforage';\nimport {_initStorage} from './_initStorage';\nimport {_isSessionStorageUsable} from './_isSessionStorageUsable';\nimport {clear} from './clear';\nimport {dropInstance} from './dropInstance';\nimport {getItem} from './getItem';\nimport {iterate} from './iterate';\nimport {key} from './key';\nimport {keys} from './keys';\nimport {length} from './length';\nimport {removeItem} from './removeItem';\nimport {setItem} from './setItem';\n\n/** @internal */\nexport const _driver = 'ngforage_sessionStorage';\n\n/** @internal */\nconst sessionStorageWrapper: LocalForageDriver = {\n  _driver,\n  _initStorage,\n  _support: _isSessionStorageUsable(),\n  clear,\n  dropInstance,\n  getItem,\n  iterate,\n  key,\n  keys,\n  length,\n  removeItem,\n  setItem\n};\n\n//tslint:disable-next-line:no-unbound-method\nlf.defineDriver(sessionStorageWrapper).catch(console.error);\n",
    "import {executeCallback} from './executeCallback';\nimport {normalizeKey} from './normalizeKey';\n\n/** @internal */\nexport function setItem(this: any, key$: string, value: any, callback?: any) {\n  key$ = normalizeKey(key$);\n\n  const promise = this.ready().then(() => {\n    // Convert undefined values to null.\n    // https://github.com/mozilla/localForage/pull/42\n    if (value === undefined) {\n      value = null;\n    }\n\n    // Save the original value to pass to the callback.\n    const originalValue = value;\n\n    return new Promise<any>((resolve, reject) => {\n      this._dbInfo.serializer.serialize(value, (value$: string, error: Error) => {\n        if (error) {\n          reject(error);\n        } else {\n          try {\n            sessionStorage.setItem(`${this._dbInfo.keyPrefix}${key$}`, value$);\n            resolve(originalValue);\n          } catch (e) {\n            // sessionStorage capacity exceeded.\n            if (\n              e.name === 'QuotaExceededError' ||\n              e.name === 'NS_ERROR_DOM_QUOTA_REACHED'\n            ) {\n              reject(e);\n            }\n            reject(e);\n          }\n        }\n      });\n    });\n  });\n\n  executeCallback(promise, callback);\n\n  return promise;\n}\n",
    "import {executeCallback} from './executeCallback';\nimport {normalizeKey} from './normalizeKey';\n\n/** @internal */\nexport function removeItem(this: any, key$: string, callback?: any) {\n  key$ = normalizeKey(key$);\n\n  const promise = this.ready().then(() => {\n    sessionStorage.removeItem(`${this._dbInfo.keyPrefix}${key$}`);\n  });\n\n  executeCallback(promise, callback);\n\n  return promise;\n}\n",
    "import {executeCallback} from './executeCallback';\n\n/** @internal */\nexport function length(this: any, callback?: any) {\n  const promise = this.keys().then((keys$: any[]) => keys$.length);\n\n  executeCallback(promise, callback);\n\n  return promise;\n}\n",
    "import {executeCallback} from './executeCallback';\n\n/** @internal */\nexport function keys(this: any, callback?: any) {\n  const promise = this.ready().then(() => {\n    const length$ = sessionStorage.length;\n    const keys$: any[] = [];\n\n    for (let i = 0; i < length$; i++) {\n      const itemKey = sessionStorage.key(i);\n      if (itemKey !== null && itemKey.indexOf(this._dbInfo.keyPrefix) === 0) {\n        keys$.push(itemKey.substring(this._dbInfo.keyPrefix.length));\n      }\n    }\n\n    return keys$;\n  });\n\n  executeCallback(promise, callback);\n\n  return promise;\n}\n",
    "import {executeCallback} from './executeCallback';\n\n/** @internal */\nexport function key(this: any, n: number, callback?: any) {\n  const promise = this.ready().then(() => {\n    let result: any;\n    try {\n      result = sessionStorage.key(n);\n    } catch (error) {\n      result = null;\n    }\n\n    // Remove the prefix from the key, if a key is found.\n    if (result) {\n      result = result.substring(this._dbInfo.keyPrefix.length);\n    }\n\n    return result;\n  });\n\n  executeCallback(promise, callback);\n\n  return promise;\n}\n",
    "import {executeCallback} from './executeCallback';\n\n/** @internal */\nexport function iterate(this: any, iterator: any, callback?: any) {\n  const promise = this.ready().then(() => {\n    const keyPrefix = this._dbInfo.keyPrefix;\n    const keyPrefixLength = keyPrefix.length;\n    const length$ = sessionStorage.length;\n\n    // We use a dedicated iterator instead of the `i` variable below\n    // so other keys we fetch in sessionStorage aren't counted in\n    // the `iterationNumber` argument passed to the `iterate()`\n    // callback.\n    //\n    // See: github.com/mozilla/localForage/pull/435#discussion_r38061530\n    let iterationNumber = 1;\n\n    for (let i = 0; i < length$; i++) {\n      const key$ = sessionStorage.key(i);\n      if (key$ === null || key$.indexOf(keyPrefix) !== 0) {\n        continue;\n      }\n      let value = sessionStorage.getItem(key$);\n\n      // If a result was found, parse it from the serialized\n      // string into a JS object. If result isn't truthy, the\n      // key is likely undefined and we'll pass it straight\n      // to the iterator.\n      if (value) {\n        value = this._dbInfo.serializer.deserialize(value);\n      }\n\n      value = iterator(\n        value,\n        key$.substring(keyPrefixLength),\n        iterationNumber++\n      );\n\n      if (value !== void 0) {\n        return value;\n      }\n    }\n  });\n\n  executeCallback(promise, callback);\n\n  return promise;\n}\n",
    "import {executeCallback} from './executeCallback';\nimport {normalizeKey} from './normalizeKey';\n\n/** @internal */\nexport function getItem(this: any, key$: string, callback?: any) {\n  key$ = normalizeKey(key$);\n\n  const promise = this.ready().then(() => {\n    let result = sessionStorage.getItem(`${this._dbInfo.keyPrefix}${key$}`);\n\n    // If a result was found, parse it from the serialized\n    // string into a JS object. If result isn't truthy, the key\n    // is likely undefined and we'll pass it straight to the\n    // callback.\n    if (result) {\n      result = this._dbInfo.serializer.deserialize(result);\n    }\n\n    return result;\n  });\n\n  executeCallback(promise, callback);\n\n  return promise;\n}\n",
    "/** @internal */\nexport function normalizeKey(key: any): string {\n  // Cast the key to a string, as that's all we can set as a key.\n  if (typeof key !== 'string') {\n    console.warn(`${key} used as a key, but it is not a string.`);\n    key = String(key);\n  }\n\n  return key;\n}\n",
    "import {_getKeyPrefix} from './_getKeyPrefix';\nimport {executeCallback} from './executeCallback';\nimport {getCallback} from './getCallback';\n\n/** @internal */\nexport function dropInstance(this: any, options: any, callback?: any) {\n  callback = getCallback.apply(this, arguments);\n\n  options = (typeof options !== 'function' && options) || {};\n  if (!options.name) {\n    const currentConfig = this.config();\n    options.name = options.name || currentConfig.name;\n    options.storeName = options.storeName || currentConfig.storeName;\n  }\n\n  let promise: Promise<void>;\n  if (!options.name) {\n    promise = Promise.reject('Invalid arguments');\n  } else {\n    promise = new Promise<string>(resolve => {\n      if (!options.storeName) {\n        resolve(`${options.name}/`);\n      } else {\n        resolve(_getKeyPrefix(options, this._defaultConfig));\n      }\n    })\n      .then((keyPrefix: any) => {\n        for (let i = sessionStorage.length - 1; i >= 0; i--) {\n          const key$ = sessionStorage.key(i);\n\n          if (key$ !== null && key$.indexOf(keyPrefix) === 0) {\n            sessionStorage.removeItem(key$);\n          }\n        }\n      });\n  }\n\n  executeCallback(promise, callback);\n\n  return promise;\n}\n",
    "/** @internal */\nexport function getCallback(): any {\n  if (arguments.length && typeof arguments[arguments.length - 1] === 'function') {\n    return arguments[arguments.length - 1];\n  }\n}\n",
    "import {executeCallback} from './executeCallback';\n\n/** @internal */\nexport function clear(this: any, callback?: any) {\n  const promise = this.ready().then(() => {\n    const keyPrefix = this._dbInfo.keyPrefix;\n\n    for (let i = sessionStorage.length - 1; i >= 0; i--) {\n      let key$ = sessionStorage.key(i);\n\n      if (key$ !== null && key$.indexOf(keyPrefix) === 0) {\n        sessionStorage.removeItem(key$);\n      }\n    }\n  });\n\n  executeCallback(promise, callback);\n\n  return promise;\n}\n",
    "/** @internal */\nexport function executeCallback(promise: Promise<any>, callback?: any): void {\n  if (callback) {\n    promise.then(\n      (result: any) => {\n        callback(null, result);\n      },\n      (error: any) => {\n        callback(error);\n      }\n    );\n  }\n}\n",
    "import {serializer} from '../imports/serializer';\nimport {_getKeyPrefix} from './_getKeyPrefix';\nimport {_isSessionStorageUsable} from './_isSessionStorageUsable';\n\n/** @internal */\nexport function _initStorage(this: any, options: LocalForageOptions) {\n  const dbInfo: any = {};\n\n  if (options) {\n    for (let i in options) { //tslint:disable-line:forin\n      dbInfo[i] = options[i];\n    }\n  }\n\n  dbInfo.keyPrefix = _getKeyPrefix(options, this._defaultConfig);\n\n  if (!_isSessionStorageUsable()) {\n    return Promise.reject(new Error('Local storage unusable'));\n  }\n\n  this._dbInfo = dbInfo;\n  dbInfo.serializer = serializer;\n\n  return Promise.resolve();\n}\n",
    "import {checkIfSessionStorageThrows} from './checkIfSessionStorageThrows';\n\n/** @internal */\nexport function _isSessionStorageUsable() {\n    return typeof sessionStorage !== 'undefined' && (!checkIfSessionStorageThrows() || sessionStorage.length > 0);\n}\n",
    "/**\n * Check if sessionStorage throws when saving an item\n * @internal\n */\nexport function checkIfSessionStorageThrows(): boolean {\n  const testKey = '_localforage_support_test';\n\n  try {\n    sessionStorage.setItem(testKey, '1');\n    sessionStorage.removeItem(testKey);\n\n    return false;\n  } catch (e) {\n    return true;\n  }\n}\n",
    "/** @internal */\nexport function _getKeyPrefix(options: LocalForageOptions, defaultConfig: LocalForageOptions): string {\n  let keyPrefix = `${options.name}/`;\n\n  if (options.storeName !== defaultConfig.storeName) {\n    keyPrefix += `${options.storeName}/`;\n  }\n\n  return keyPrefix;\n}\n",
    "/** @internal */\nconst serializer$: any = require('localforage/src/utils/serializer');\n\n/** @internal */\nexport const serializer: any = serializer$.default || serializer$;\n",
    "import 'localforage';\n\n/** @internal */\nconst lf: any = require('localforage');\n\n/** @internal */\nexport const localForage: LocalForage = 'defineDriver' in lf ? lf : lf.default;\n",
    "/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n"
  ],
  "names": [
    "Injectable",
    "conf$",
    "tslib_1.__extends",
    "LazyGetter",
    "Inject",
    "lf",
    "Optional",
    "NgModule",
    "InjectionToken"
  ],
  "mappings": "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"
}
